---
name: ingest
services:
  postgres:
    image: timescale/timescaledb-ha:pg17
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    volumes:
      - hatchet_lite_postgres_data:/home/postgres/pgdata/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "postgres"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s

  vectorizer-worker:
    image: timescale/pgai-vectorizer-worker:latest
    environment:
      PGAI_VECTORIZER_WORKER_DB_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      VOYAGE_API_KEY: ${VOYAGE_API_KEY}
    command: ["--poll-interval", "5s", "--log-level", "DEBUG"]
    depends_on:
      - postgres

  hatchet-lite:
    image: ghcr.io/hatchet-dev/hatchet/hatchet-lite:latest
    ports:
      - "8888:8888"
      - "7077:7077"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      DATABASE_POSTGRES_PORT: "5432"
      DATABASE_POSTGRES_HOST: "postgres"
      SERVER_TASKQUEUE_RABBITMQ_URL: amqp://user:password@localhost:5672/
      SERVER_AUTH_COOKIE_DOMAIN: localhost
      SERVER_AUTH_COOKIE_INSECURE: "t"
      SERVER_GRPC_BIND_ADDRESS: "0.0.0.0"
      SERVER_GRPC_INSECURE: "t"
      SERVER_GRPC_BROADCAST_ADDRESS: localhost:7077
      SERVER_GRPC_PORT: "7077"
      SERVER_GRPC_MAX_MSG_SIZE: "2147483648"
      SERVER_URL: http://localhost:8888
      SERVER_AUTH_SET_EMAIL_VERIFIED: "t"
      SERVER_LOGGER_LEVEL: warn
      SERVER_LOGGER_FORMAT: console
      DATABASE_LOGGER_LEVEL: warn
      DATABASE_LOGGER_FORMAT: console
    volumes:
      - "hatchet_lite_rabbitmq_data:/var/lib/rabbitmq/mnesia"
      - "hatchet_lite_config:/config"

  ingest-api:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - HATCHET_API_URL=${HATCHET_API_URL}
      - HATCHET_GRPC_URL=${HATCHET_GRPC_URL}
      - VOYAGE_API_KEY=${VOYAGE_API_KEY}
    volumes:
      - ./tmp:/tmp
    depends_on:
      postgres:
        condition: service_healthy
      hatchet-lite:
        condition: service_started

volumes:
  hatchet_lite_postgres_data:
  hatchet_lite_rabbitmq_data:
  hatchet_lite_config: